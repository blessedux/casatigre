@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 24 85% 52%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 24 85% 52%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 24 85% 52%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 24 85% 52%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

html {
  scroll-behavior: smooth;
}

/* Fixed background parallax effect */
.fixed-background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  background-attachment: fixed;
  will-change: transform;
  backface-visibility: hidden;
}

.fixed-background img {
  object-fit: contain;
  object-position: top;
  width: 100% !important;
  height: 100% !important;
  margin: 0;
  border-radius: 0;
}

/* Responsive styles for desktop */
@media (min-width: 1024px) {
  .fixed-background img, 
  .animation-frame img {
    object-fit: cover;
    object-position: top center;
    width: 100% !important;
    height: 100% !important;
    transform: scale(1.2);
    transform-origin: top center;
  }
}

.content-overlay {
  position: relative;
  z-index: 10;
}

.transparent-section {
  background-color: rgba(255, 255, 255, 0.15) !important;
  -webkit-backdrop-filter: blur(8px);
  backdrop-filter: blur(8px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 1rem;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
}

.text-shadow {
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
}

.glass-card {
  background-color: rgba(255, 255, 255, 0.2);
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

/* Animation frame container */
.animation-frames-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
}

.animation-frame {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  transition: opacity 0.1s ease-in-out;
}

.animation-frame.visible {
  opacity: 1;
}

.animation-frame img {
  object-fit: contain;
  object-position: top;
  width: 100% !important;
  height: 100% !important;
  margin: 0;
  border-radius: 0;
}

/* Special class for desktop zoom */
.desktop-zoom {
  object-fit: contain;
  object-position: top;
  width: 100% !important;
  height: 100% !important;
  margin: 0;
  border-radius: 0;
}

@media (min-width: 1024px) {
  .desktop-zoom {
    object-fit: cover !important;
    object-position: top center !important;
    width: 100% !important;
    height: 100% !important;
    transform: scale(1.3) !important;
    transform-origin: top center !important;
  }
  
  /* Background vertical scroll effect for desktop */
  .animation-frame img {
    will-change: object-position;
    transition: none !important; /* Remove transition for direct manipulation */
  }
}

/* Fade in animation for sections */
.fade-in-section {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  will-change: opacity, transform;
}

.fade-in-section.is-visible {
  opacity: 1;
  transform: translateY(0);
}
